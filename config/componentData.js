module.exports = [{"name":"EyeIcon","description":"SVG Eye Icon","code":"import React from 'react';\n\n/** SVG Eye Icon */\n\nfunction EyeIcon() {\n  return (\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><g transform=\"matrix(.02146 0 0 .02146 1 1)\" fill=\"#4d4d4d\"><path d=\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\"/><circle cx=\"466.08\" cy=\"466.02\" r=\"134.5\"/></g></svg>\n  )\n}\n\nexport default EyeIcon;\n","examples":[{"name":"ExampleEyeIcon","description":"EyeIcon","code":"import React from 'react';\nimport EyeIcon from 'sil-react/EyeIcon';\n\n/** EyeIcon */\nexport default function ExampleEyeIcon() {\n  return <EyeIcon />;\n}\n"}]},{"name":"Label","description":"Label with required field display, htmlFor, and block styling","props":{"htmlFor":{"type":{"name":"string"},"required":true,"description":"HTML ID for associated input"},"label":{"type":{"name":"string"},"required":true,"description":"Label text"},"required":{"type":{"name":"bool"},"required":false,"description":"Display asterix after label if true"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Label.css';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n  return (\n    <label style={{display: 'block'}} htmlFor={htmlFor}>\n      {label} { required && <span style={{color: 'red'}}> *</span> }\n    </label>\n  )\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterix after label if true */\n  required: PropTypes.bool\n};\n\nLabel.defaultProps = {\n}\n\nexport default Label;\n","examples":[{"name":"ExampleLabel","description":"Label","code":"import React from 'react';\nimport Label from 'sil-react/Label';\n\n/** Label */\nexport default function ExampleLabel() {\n  return <Label\n    label=\"Label for label\"\n    htmlFor=\"optional_label\"\n  />;\n}\n"},{"name":"ExampleLabelRequired","description":"Label Required","code":"import React from 'react';\nimport Label from 'sil-react/Label';\n\n/** Label Required */\nexport default function ExampleLabelRequired() {\n  return <Label\n    label=\"Label for label\"\n    htmlFor=\"req_label\"\n    required\n  />;\n}\n"}]},{"name":"ProgressBar","description":"","props":{"percent":{"type":{"name":"number"},"required":true,"description":"Percent of progress completed"},"width":{"type":{"name":"number"},"required":true,"description":"Bar width"},"height":{"type":{"name":"number"},"required":false,"description":"Bar height","defaultValue":{"value":"5","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ProgressBar.css';\n\nclass ProgressBar extends React.Component {\n\n  getColor = percent => {\n    if(this.props.percent === 100) return 'green';\n    return this.props.percent > 50 ? 'lightgreen' : 'red';\n  }\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  }\n  render() {\n    const {percent, width, height} = this.props;\n    return (\n      <div style={{border: 'solid 1px lightgray', width: width}} className=\"progressBar\">\n        <div style={{\n          width: this.getWidthAsPercentOfTotalWidth(),\n          height,\n          backgroundColor: this.getColor(percent)\n        }}>\n        </div>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n}\n\nexport default ProgressBar;\n","examples":[{"name":"Example100Percent","description":"Example100Percent","code":"import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example100Percent*/\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} />;\n}\n"},{"name":"Example10Percent","description":"Example10Percent","code":"import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example10Percent*/\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />;\n}\n"},{"name":"Example70Percent","description":"Example70Percent","code":"import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example70Percent*/\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n"}]}]