{"version":3,"sources":["../config/componentData.js","docs/examples/About/ExampleAbout.js","components/Button/Button.js","docs/examples/Button/ExampleButton.js","components/Panel/Panel.js","docs/examples/Panel/ExamplePanel.js","components/Toggle/Toggle.js","docs/examples/Toggle/ExampleToggle.js","components/Table/Table.js","docs/examples/Table/ExampleTable.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["module","exports","name","description","code","examples","props","message","type","required","defaultValue","value","computed","theme","size","title","list","data","width","__webpack_require__","r","__webpack_exports__","d","ExampleAbout","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","a","createElement","Button","_ref","react_default","className","concat","defaultProps","ExampleButton","react","components_Button_Button","Panel","map","item","key","ExamplePanel","components_Panel_Panel","Toggle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","show","state","style","onClick","React","Component","ExampleToggle","components_Toggle_Toggle","Table","console","log","header","body","footer","ExampleTable","components_Table_Table","./About/ExampleAbout","./About/ExampleAbout.js","./Button/ExampleButton","./Button/ExampleButton.js","./Panel/ExamplePanel","./Panel/ExamplePanel.js","./Table/ExampleTable","./Table/ExampleTable.js","./Toggle/ExampleToggle","./Toggle/ExampleToggle.js","webpackContext","req","id","webpackContextResolve","e","Error","keys","resolve","Navigation","components","href","CodeExample","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","Example","toggleCode","event","preventDefault","prevState","showCode","_this$props$example","example","ExampleComponent","require","componentName","default","docs_CodeExample","Props","ComponentPage","component","length","docs_Example","docs_Props","Docs","route","window","location","hash","substr","_this2","addEventListener","componentData","filter","docs_Navigation","docs_ComponentPage","Boolean","hostname","match","ReactDOM","render","Docs_Docs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd71249e.chunk.js","sourcesContent":["module.exports = [{\n  \"name\": \"About\",\n  \"description\": \"Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n  \"code\": \"import React from 'react';\\n\\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\\n\\nconst About = () => {\\n  return <About />\\n}\\n\\nexport default About;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleAbout\",\n    \"description\": \"\",\n    \"code\": \"import React, { Fragment } from 'react';\\nimport About from 'sil-react/About';\\n\\nexport default function ExampleAbout() {\\n  return <Fragment>\\n    <About />\\n    <p>Built for The Service Innovation Lab, Wellington, New Zealand</p>\\n    <ul>\\n      <li>Reusable components</li>\\n      <li>Auto generated documentation</li>\\n      <li>Consistent look and feel</li>\\n      <li>Consistent API</li>\\n      <li>All components follow the same pattern</li>\\n      <li>Confidence the application we build will seem cohesive</li>\\n      <li>Easier to add a new component</li>\\n      <li>Simple organisation (DRY - Don't repeat yourself)</li>\\n      <li>Can add components quickly</li>\\n      <li>Reduces dependency management overhead</li>\\n      <li>Easier for developer to grasp how our application works</li>\\n    </ul>\\n  </Fragment>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Button\",\n  \"description\": \"Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to display on the button\",\n      \"defaultValue\": {\n        \"value\": \"'Submit'\",\n        \"computed\": false\n      }\n    },\n    \"theme\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Themes available: info\",\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      }\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Sizes available: small, medium, large\",\n      \"defaultValue\": {\n        \"value\": \"'small'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\\n\\nconst Button = ({message, theme, size}) => {\\n  return <button className={`btn ${theme && theme} ${size && size}`}>{message}</button>\\n}\\n\\nButton.propTypes = {\\n  /** Message to display on the button */\\n  message: PropTypes.string,\\n  /** Themes available: info */\\n  theme: PropTypes.string,\\n  /** Sizes available: small, medium, large */\\n  size: PropTypes.string\\n}\\n\\nButton.defaultProps = {\\n  message: 'Submit',\\n  theme: 'default',\\n  size: 'small'\\n}\\n\\nexport default Button;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleButton\",\n    \"description\": \"Includes several predefined button styles,\\neach serving its own semantic purpose,\\nwith a few extras thrown in for more control.\",\n    \"code\": \"import React, { Fragment } from 'react';\\nimport Button from 'sil-react/Button';\\n\\n/** Includes several predefined button styles,\\n  * each serving its own semantic purpose,\\n  * with a few extras thrown in for more control.\\n**/\\n\\nexport default function ExampleButton() {\\n  return <Fragment>\\n\\n    <p>\\n      <Button />\\n    </p>\\n\\n    <p>\\n      <Button message=\\\"This is a button\\\" />\\n    </p>\\n\\n    <p>\\n      <Button\\n        message=\\\"This is a button\\\"\\n        theme=\\\"info\\\"\\n      />\\n    </p>\\n\\n    <h3>Sizes</h3>\\n\\n    <p>\\n      <Button\\n        message=\\\"This is a button\\\"\\n        theme=\\\"info\\\"\\n        size=\\\"small\\\"\\n      />\\n    </p>\\n\\n    <p>\\n      <Button\\n        message=\\\"This is a button\\\"\\n        theme=\\\"info\\\"\\n        size=\\\"medium\\\"\\n      />\\n    </p>\\n\\n    <p>\\n      <Button\\n        message=\\\"This is a button\\\"\\n        theme=\\\"info\\\"\\n        size=\\\"large\\\"\\n      />\\n    </p>\\n\\n  </Fragment>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Panel\",\n  \"description\": \"Panels\",\n  \"props\": {\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"A title for the panel\",\n      \"defaultValue\": {\n        \"value\": \"'Panel Title'\",\n        \"computed\": false\n      }\n    },\n    \"list\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"Array of information\"\n    },\n    \"theme\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Available themes: success, warning\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Panels  */\\n\\nconst Panel = ({title, list, theme}) => {\\n  return <div className=\\\"panel\\\">\\n    <header className={theme && theme}>\\n      <h2>{title}</h2>\\n    </header>\\n    <div>\\n      {list && <ul>\\n        {list.map(item=>{\\n          return <li key={item}>{item}</li>\\n        })}\\n      </ul>}\\n      {!list && <p>No data to display</p>}\\n    </div>\\n  </div>\\n}\\n\\nPanel.propTypes = {\\n  /** A title for the panel */\\n  title: PropTypes.string.isRequired,\\n  /** Array of information */\\n  list: PropTypes.array,\\n  /** Available themes: success, warning */\\n  theme: PropTypes.string\\n}\\n\\nPanel.defaultProps = {\\n  title: 'Panel Title'\\n}\\n\\nexport default Panel;\\n\",\n  \"examples\": [{\n    \"name\": \"ExamplePanel\",\n    \"description\": \"A Panel\",\n    \"code\": \"import React, { Fragment } from 'react';\\nimport Panel from 'sil-react/Panel';\\n\\n/** A Panel */\\n\\nexport default function ExamplePanel() {\\n  return (\\n    <Fragment>\\n\\n      <Panel />\\n\\n      <Panel\\n        title=\\\"Best dates to apply\\\"\\n        list={[\\n          '1 April 2018 -- 13 April 2018',\\n          '5 May -- 13 May 2018'\\n        ]}\\n        theme=\\\"success\\\"\\n      />\\n\\n      <Panel\\n        title=\\\"Do not apply\\\"\\n        list={[\\n          '1 April 2018 -- 13 April 2018',\\n          '5 May -- 13 May 2018'\\n        ]}\\n        theme=\\\"warning\\\"\\n      />\\n\\n    </Fragment>\\n  )\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Table\",\n  \"description\": \"Used to display tabular data\",\n  \"props\": {\n    \"data\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"Object of arrays\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Used to display tabular data */\\n\\nconst Table = ({data}) => {\\n  return <table>\\n    {console.log(data)}\\n    {data.header &&\\n      <thead>\\n        {\\n          data.header.map(key => {\\n            return (\\n              <th key={key}>{key}</th>\\n            )\\n          })\\n        }\\n      </thead>\\n    }\\n    {data.body && <tbody>\\n      {\\n        data.body.map(item=>{\\n          return <td>{item}</td>\\n        })\\n      }\\n    </tbody>}\\n    {data.footer && <tfoot>\\n      {\\n        data.footer.map(item=>{\\n          return <td>{item}</td>\\n        })\\n      }\\n    </tfoot>}\\n  </table>\\n}\\n\\nTable.propTypes = {\\n  /** Object of arrays */\\n  data: PropTypes.object.isRequired\\n}\\n\\nexport default Table;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleTable\",\n    \"description\": \"A Table\",\n    \"code\": \"import React from 'react';\\nimport Table from 'sil-react/Table';\\n\\n/** A Table */\\n\\nexport default function ExampleTable() {\\n  return <Table data={{\\n    header: ['Name', 'Address', 'Phone'],\\n    body: ['Joe Blogs', '555 Blog Street', '555-111-222']\\n  }}/>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Toggle\",\n  \"description\": \"A toggle component\",\n  \"props\": {\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"The width of the button\",\n      \"defaultValue\": {\n        \"value\": \"250\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React, { Fragment } from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** A toggle component\\n**/\\n\\nclass Toggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: false\\n    };\\n  }\\n\\n  toggle = () => {\\n    this.setState({\\n      show: !this.state.show\\n    });\\n  }\\n\\n  render() {\\n    const {width} = this.props;\\n    return (\\n      <Fragment>\\n        <button style={{width: `${width}px`}} onClick={this.toggle}>{this.state.show ? 'Untoggle' : 'Toggle'}</button>\\n        {this.state.show && <p>You found me!</p>}\\n      </Fragment>\\n    )\\n  }\\n}\\n\\nToggle.propTypes = {\\n  /** The width of the button */\\n  width: PropTypes.number\\n}\\n\\nToggle.defaultProps = {\\n  width: 250\\n}\\n\\nexport default Toggle;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleToggle\",\n    \"description\": \"A simple Toggle component\",\n    \"code\": \"import React from 'react';\\nimport Toggle from 'sil-react/Toggle';\\n\\n/** A simple Toggle component */\\n\\nexport default function ExampleToggle() {\\n  return <Toggle width=\\\"150\\\" />\\n}\\n\"\n  }]\n}];","import React, { Fragment } from 'react';\n// import About from 'sil-react/About';\n\nexport default function ExampleAbout() {\n  return <Fragment>\n    {/* <About /> */}\n    <p>Built for The Service Innovation Lab, Wellington, New Zealand</p>\n    <ul>\n      <li>Reusable components</li>\n      <li>Auto generated documentation</li>\n      <li>Consistent look and feel</li>\n      <li>Consistent API</li>\n      <li>All components follow the same pattern</li>\n      <li>Confidence the application we build will seem cohesive</li>\n      <li>Easier to add a new component</li>\n      <li>Simple organisation (DRY - Don't repeat yourself)</li>\n      <li>Can add components quickly</li>\n      <li>Reduces dependency management overhead</li>\n      <li>Easier for developer to grasp how our application works</li>\n    </ul>\n  </Fragment>\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\n\nconst Button = ({message, theme, size}) => {\n  return <button className={`btn ${theme && theme} ${size && size}`}>{message}</button>\n}\n\nButton.propTypes = {\n  /** Message to display on the button */\n  message: PropTypes.string,\n  /** Themes available: info */\n  theme: PropTypes.string,\n  /** Sizes available: small, medium, large */\n  size: PropTypes.string\n}\n\nButton.defaultProps = {\n  message: 'Submit',\n  theme: 'default',\n  size: 'small'\n}\n\nexport default Button;\n","import React, { Fragment } from 'react';\nimport Button from 'sil-react/Button';\n\n/** Includes several predefined button styles,\n  * each serving its own semantic purpose,\n  * with a few extras thrown in for more control.\n**/\n\nexport default function ExampleButton() {\n  return <Fragment>\n\n    <p>\n      <Button />\n    </p>\n\n    <p>\n      <Button message=\"This is a button\" />\n    </p>\n\n    <p>\n      <Button\n        message=\"This is a button\"\n        theme=\"info\"\n      />\n    </p>\n\n    <h3>Sizes</h3>\n\n    <p>\n      <Button\n        message=\"This is a button\"\n        theme=\"info\"\n        size=\"small\"\n      />\n    </p>\n\n    <p>\n      <Button\n        message=\"This is a button\"\n        theme=\"info\"\n        size=\"medium\"\n      />\n    </p>\n\n    <p>\n      <Button\n        message=\"This is a button\"\n        theme=\"info\"\n        size=\"large\"\n      />\n    </p>\n\n  </Fragment>\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Panels  */\n\nconst Panel = ({title, list, theme}) => {\n  return <div className=\"panel\">\n    <header className={theme && theme}>\n      <h2>{title}</h2>\n    </header>\n    <div>\n      {list && <ul>\n        {list.map(item=>{\n          return <li key={item}>{item}</li>\n        })}\n      </ul>}\n      {!list && <p>No data to display</p>}\n    </div>\n  </div>\n}\n\nPanel.propTypes = {\n  /** A title for the panel */\n  title: PropTypes.string.isRequired,\n  /** Array of information */\n  list: PropTypes.array,\n  /** Available themes: success, warning */\n  theme: PropTypes.string\n}\n\nPanel.defaultProps = {\n  title: 'Panel Title'\n}\n\nexport default Panel;\n","import React, { Fragment } from 'react';\nimport Panel from 'sil-react/Panel';\n\n/** A Panel */\n\nexport default function ExamplePanel() {\n  return (\n    <Fragment>\n\n      <Panel />\n\n      <Panel\n        title=\"Best dates to apply\"\n        list={[\n          '1 April 2018 -- 13 April 2018',\n          '5 May -- 13 May 2018'\n        ]}\n        theme=\"success\"\n      />\n\n      <Panel\n        title=\"Do not apply\"\n        list={[\n          '1 April 2018 -- 13 April 2018',\n          '5 May -- 13 May 2018'\n        ]}\n        theme=\"warning\"\n      />\n\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n/** A toggle component\n**/\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    const {width} = this.props;\n    return (\n      <Fragment>\n        <button style={{width: `${width}px`}} onClick={this.toggle}>{this.state.show ? 'Untoggle' : 'Toggle'}</button>\n        {this.state.show && <p>You found me!</p>}\n      </Fragment>\n    )\n  }\n}\n\nToggle.propTypes = {\n  /** The width of the button */\n  width: PropTypes.number\n}\n\nToggle.defaultProps = {\n  width: 250\n}\n\nexport default Toggle;\n","import React from 'react';\nimport Toggle from 'sil-react/Toggle';\n\n/** A simple Toggle component */\n\nexport default function ExampleToggle() {\n  return <Toggle width=\"150\" />\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Used to display tabular data */\n\nconst Table = ({data}) => {\n  return <table>\n    {console.log(data)}\n    {data.header &&\n      <thead>\n        {\n          data.header.map(key => {\n            return (\n              <th key={key}>{key}</th>\n            )\n          })\n        }\n      </thead>\n    }\n    {data.body && <tbody>\n      {\n        data.body.map(item=>{\n          return <td>{item}</td>\n        })\n      }\n    </tbody>}\n    {data.footer && <tfoot>\n      {\n        data.footer.map(item=>{\n          return <td>{item}</td>\n        })\n      }\n    </tfoot>}\n  </table>\n}\n\nTable.propTypes = {\n  /** Object of arrays */\n  data: PropTypes.object.isRequired\n}\n\nexport default Table;\n","import React from 'react';\nimport Table from 'sil-react/Table';\n\n/** A Table */\n\nexport default function ExampleTable() {\n  return <Table data={{\n    header: ['Name', 'Address', 'Phone'],\n    body: ['Joe Blogs', '555 Blog Street', '555-111-222']\n  }}/>\n}\n","var map = {\n\t\"./About/ExampleAbout\": 9,\n\t\"./About/ExampleAbout.js\": 9,\n\t\"./Button/ExampleButton\": 10,\n\t\"./Button/ExampleButton.js\": 10,\n\t\"./Panel/ExamplePanel\": 11,\n\t\"./Panel/ExamplePanel.js\": 11,\n\t\"./Table/ExampleTable\": 13,\n\t\"./Table/ExampleTable.js\": 13,\n\t\"./Toggle/ExampleToggle\": 12,\n\t\"./Toggle/ExampleToggle.js\": 12\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <div className=\"navigation\">\n      <h2>Components</h2>\n      <ul>\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n     </ul>\n     <a href=\"https://github.com/dlouise64/comp-lib\">View on Github</a>\n    </div>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\n\nclass CodeExample extends React.Component {\n  componentDidMount() {\n    hljs.registerLanguage('javascript', javascript);\n    hljs.highlightBlock(this.element);\n  }\n\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <code>\n          {this.props.children}\n        </code>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n\n  // use static class proper so we can omit use of bind in constructor\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n\n    // must use CommonJS require to dynamically require\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n\n    return (\n      <div>\n        {description && <h4>{description}</h4>}\n\n        <div className=\"codeexample\">\n          <ExampleComponent />\n        </div>\n\n        <p>\n          <button style={{width: '150px'}} onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </button>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(props).map(key => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{props[key].description}</td>\n                <td>{props[key].type.name}</td>\n                <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n                <td>{props[key].required && \"true\"}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example  from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n}\n\nexport default ComponentPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route )[0] : componentData[0];\n\n    return (\n      <div>\n        <header>\n          <h1>Service Innovation Lab</h1>\n        </header>\n        <div className=\"parent\">\n        <div className=\"left\">\n          <Navigation components={componentData.map(component => component.name)} />\n        </div>\n        <div className=\"right\">\n          <ComponentPage component={component} />\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/highlight.js/styles/vs2015.css';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}