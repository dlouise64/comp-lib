{"version":3,"sources":["../config/componentData.js","components/Button/Button.js","docs/examples/Button/ExampleButton.js","components/HelloWorld/HelloWorld.js","docs/examples/HelloWorld/ExampleHelloWorld.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["module","exports","name","description","props","message","type","required","defaultValue","value","computed","code","examples","Button","_ref","react_default","a","createElement","defaultProps","ExampleButton","components_Button_Button","__webpack_require__","d","__webpack_exports__","HelloWorld","ExampleHelloWorld","components_HelloWorld_HelloWorld","map","./Button/ExampleButton","./Button/ExampleButton.js","./HelloWorld/ExampleHelloWorld","./HelloWorld/ExampleHelloWorld.js","webpackContext","req","id","webpackContextResolve","e","Error","keys","Object","resolve","Navigation","components","className","key","href","concat","CodeExample","hljs","registerLanguage","javascript","highlightBlock","this","element","_this","ref","children","React","Component","Example","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCode","event","preventDefault","setState","prevState","showCode","state","_this$props$example","example","ExampleComponent","require","componentName","default","onClick","docs_CodeExample","Props","ComponentPage","component","length","docs_Example","docs_Props","Docs","route","window","location","hash","substr","_this2","addEventListener","componentData","filter","docs_Navigation","docs_ComponentPage","Boolean","hostname","match","ReactDOM","render","Docs_Docs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd1f1d1e.chunk.js","sourcesContent":["module.exports = [{\n  \"name\": \"Button\",\n  \"description\": \"Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to display\",\n      \"defaultValue\": {\n        \"value\": \"'Submit'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\\n\\nconst Button = ({message}) => {\\n  return <button>{message}</button>\\n}\\n\\nButton.propTypes = {\\n  /** Message to display */\\n  message: PropTypes.string\\n}\\n\\nButton.defaultProps = {\\n  message: 'Submit'\\n}\\n\\nexport default Button;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleButton\",\n    \"description\": \"Includes several predefined button styles,\\neach serving its own semantic purpose,\\nwith a few extras thrown in for more control.\",\n    \"code\": \"import React from 'react';\\nimport Button from 'sil-react/Button';\\n\\n/** Includes several predefined button styles,\\n  * each serving its own semantic purpose,\\n  * with a few extras thrown in for more control.\\n**/\\n\\nexport default function ExampleButton() {\\n  return <Button message=\\\"This is a button\\\"/>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"HelloWorld\",\n  \"description\": \"This is the component description - add custom message.\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to display\",\n      \"defaultValue\": {\n        \"value\": \"'World'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** This is the component description - add custom message. */\\n\\nconst HelloWorld = ({message}) => {\\n  return <div>Hello {message}</div>\\n}\\n\\nHelloWorld.propTypes = {\\n  /** Message to display */\\n  message: PropTypes.string\\n}\\n\\nHelloWorld.defaultProps = {\\n  message: 'World'\\n}\\n\\nexport default HelloWorld;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleHelloWorld\",\n    \"description\": \"Custom message\",\n    \"code\": \"import React from 'react';\\nimport HelloWorld from 'sil-react/HelloWorld';\\n\\n/** Custom message */\\n\\nexport default function ExampleHelloWorld() {\\n  return <div>\\n    <HelloWorld message=\\\"Yo!\\\" />\\n  </div>\\n}\\n\"\n  }]\n}];","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\n\nconst Button = ({message}) => {\n  return <button>{message}</button>\n}\n\nButton.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n}\n\nButton.defaultProps = {\n  message: 'Submit'\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from 'sil-react/Button';\n\n/** Includes several predefined button styles,\n  * each serving its own semantic purpose,\n  * with a few extras thrown in for more control.\n**/\n\nexport default function ExampleButton() {\n  return <Button message=\"This is a button\"/>\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** This is the component description - add custom message. */\n\nconst HelloWorld = ({message}) => {\n  return <div>Hello {message}</div>\n}\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n}\n\nHelloWorld.defaultProps = {\n  message: 'World'\n}\n\nexport default HelloWorld;\n","import React from 'react';\nimport HelloWorld from 'sil-react/HelloWorld';\n\n/** Custom message */\n\nexport default function ExampleHelloWorld() {\n  return <div>\n    <HelloWorld message=\"Yo!\" />\n  </div>\n}\n","var map = {\n\t\"./Button/ExampleButton\": 9,\n\t\"./Button/ExampleButton.js\": 9,\n\t\"./HelloWorld/ExampleHelloWorld\": 10,\n\t\"./HelloWorld/ExampleHelloWorld.js\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <div className=\"navigation\">\n      <h2>Components</h2>\n      <ul>\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n    </div>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\n\nclass CodeExample extends React.Component {\n  componentDidMount() {\n    hljs.registerLanguage('javascript', javascript);\n    hljs.highlightBlock(this.element);\n  }\n\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <code>\n          {this.props.children}\n        </code>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n\n  // use static class proper so we can omit use of bind in constructor\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n\n    // must use CommonJS require to dynamically require\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n\n    return (\n      <div>\n        {description && <h4>{description}</h4>}\n\n        <div className=\"codeexample\">\n          <ExampleComponent />\n        </div>\n\n        <p>\n          <a href=\"#\" onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </a>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(props).map(key => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{props[key].description}</td>\n                <td>{props[key].type.name}</td>\n                <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n                <td>{props[key].required && \"X\"}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example  from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n}\n\nexport default ComponentPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route )[0] : componentData[0];\n\n    return (\n      <div className=\"parent\">\n        <div className=\"left\">\n          <Navigation components={componentData.map(component => component.name)} />\n        </div>\n        <div className=\"right\">\n          <ComponentPage component={component} />\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/highlight.js/styles/vs2015.css';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}