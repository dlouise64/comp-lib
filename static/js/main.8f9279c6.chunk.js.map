{"version":3,"sources":["../config/componentData.js","components/Table/Table.js","docs/examples/Table/ExampleTable.js","components/Toggle/Toggle.js","docs/examples/Toggle/ExampleToggle.js","components/Button/Button.js","docs/examples/Button/ExampleButton.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["module","exports","name","description","props","message","type","required","defaultValue","value","computed","code","examples","data","width","Table","_ref","react_default","a","createElement","console","log","header","map","key","body","item","footer","ExampleTable","components_Table_Table","__webpack_require__","d","__webpack_exports__","Toggle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","show","state","react","style","concat","onClick","React","Component","defaultProps","ExampleToggle","components_Toggle_Toggle","Button","ExampleButton","components_Button_Button","./Button/ExampleButton","./Button/ExampleButton.js","./Table/ExampleTable","./Table/ExampleTable.js","./Toggle/ExampleToggle","./Toggle/ExampleToggle.js","webpackContext","req","id","webpackContextResolve","e","Error","keys","resolve","Navigation","components","className","href","CodeExample","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","Example","toggleCode","event","preventDefault","prevState","showCode","_this$props$example","example","ExampleComponent","require","componentName","default","docs_CodeExample","Props","ComponentPage","component","length","docs_Example","docs_Props","Docs","route","window","location","hash","substr","_this2","addEventListener","componentData","filter","docs_Navigation","docs_ComponentPage","Boolean","hostname","match","ReactDOM","render","Docs_Docs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f9279c6.chunk.js","sourcesContent":["module.exports = [{\n  \"name\": \"Button\",\n  \"description\": \"Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to display\",\n      \"defaultValue\": {\n        \"value\": \"'Submit'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\\n\\nconst Button = ({message}) => {\\n  return <button>{message}</button>\\n}\\n\\nButton.propTypes = {\\n  /** Message to display */\\n  message: PropTypes.string\\n}\\n\\nButton.defaultProps = {\\n  message: 'Submit'\\n}\\n\\nexport default Button;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleButton\",\n    \"description\": \"Includes several predefined button styles,\\neach serving its own semantic purpose,\\nwith a few extras thrown in for more control.\",\n    \"code\": \"import React from 'react';\\nimport Button from 'sil-react/Button';\\n\\n/** Includes several predefined button styles,\\n  * each serving its own semantic purpose,\\n  * with a few extras thrown in for more control.\\n**/\\n\\nexport default function ExampleButton() {\\n  return <Button message=\\\"This is a button\\\"/>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Table\",\n  \"description\": \"Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n  \"props\": {\n    \"data\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"Object of arrays\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\\n\\nconst Table = ({data}) => {\\n  return <table>\\n    {console.log(data)}\\n    {data.header &&\\n      <thead>\\n        {\\n          data.header.map(key => {\\n            return (\\n              <th key={key}>{key}</th>\\n            )\\n          })\\n        }\\n      </thead>\\n    }\\n    {data.body && <tbody>\\n      {\\n        data.body.map(item=>{\\n          return <td>{item}</td>\\n        })\\n      }\\n    </tbody>}\\n    {data.footer && <tfoot>\\n      {\\n        data.footer.map(item=>{\\n          return <td>{item}</td>\\n        })\\n      }\\n    </tfoot>}\\n  </table>\\n}\\n\\nTable.propTypes = {\\n  /** Object of arrays */\\n  data: PropTypes.object.isRequired\\n}\\n\\nexport default Table;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleTable\",\n    \"description\": \"A Table\",\n    \"code\": \"import React from 'react';\\nimport Table from 'sil-react/Table';\\n\\n/** A Table */\\n\\nexport default function ExampleTable() {\\n  return <Table data={{\\n    header: ['Name', 'Address', 'Phone'],\\n    body: ['Joe Blogs', '555 Blog Street', '555-111-222']\\n  }}/>\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Toggle\",\n  \"description\": \"A toggle component\",\n  \"props\": {\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"The width of the button\",\n      \"defaultValue\": {\n        \"value\": \"250\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React, { Fragment } from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** A toggle component\\n**/\\n\\nclass Toggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: false\\n    };\\n  }\\n\\n  toggle = () => {\\n    this.setState({\\n      show: !this.state.show\\n    });\\n  }\\n\\n  render() {\\n    const {width} = this.props;\\n    return (\\n      <Fragment>\\n        <button style={{width: `${width}px`}} onClick={this.toggle}>{this.state.show ? 'Untoggle' : 'Toggle'}</button>\\n        {this.state.show && <p>You found me!</p>}\\n      </Fragment>\\n    )\\n  }\\n}\\n\\nToggle.propTypes = {\\n  /** The width of the button */\\n  width: PropTypes.number\\n}\\n\\nToggle.defaultProps = {\\n  width: 250\\n}\\n\\nexport default Toggle;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleToggle\",\n    \"description\": \"A simple Toggle component\",\n    \"code\": \"import React from 'react';\\nimport Toggle from 'sil-react/Toggle';\\n\\n/** A simple Toggle component */\\n\\nexport default function ExampleToggle() {\\n  return <Toggle width=\\\"150\\\" />\\n}\\n\"\n  }]\n}];","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Used to display tabular data */\n\nconst Table = ({data}) => {\n  return <table>\n    {console.log(data)}\n    {data.header &&\n      <thead>\n        {\n          data.header.map(key => {\n            return (\n              <th key={key}>{key}</th>\n            )\n          })\n        }\n      </thead>\n    }\n    {data.body && <tbody>\n      {\n        data.body.map(item=>{\n          return <td>{item}</td>\n        })\n      }\n    </tbody>}\n    {data.footer && <tfoot>\n      {\n        data.footer.map(item=>{\n          return <td>{item}</td>\n        })\n      }\n    </tfoot>}\n  </table>\n}\n\nTable.propTypes = {\n  /** Object of arrays */\n  data: PropTypes.object.isRequired\n}\n\nexport default Table;\n","import React from 'react';\nimport Table from 'sil-react/Table';\n\n/** A Table */\n\nexport default function ExampleTable() {\n  return <Table data={{\n    header: ['Name', 'Address', 'Phone'],\n    body: ['Joe Blogs', '555 Blog Street', '555-111-222']\n  }}/>\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n/** A toggle component\n**/\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    const {width} = this.props;\n    return (\n      <Fragment>\n        <button style={{width: `${width}px`}} onClick={this.toggle}>{this.state.show ? 'Untoggle' : 'Toggle'}</button>\n        {this.state.show && <p>You found me!</p>}\n      </Fragment>\n    )\n  }\n}\n\nToggle.propTypes = {\n  /** The width of the button */\n  width: PropTypes.number\n}\n\nToggle.defaultProps = {\n  width: 250\n}\n\nexport default Toggle;\n","import React from 'react';\nimport Toggle from 'sil-react/Toggle';\n\n/** A simple Toggle component */\n\nexport default function ExampleToggle() {\n  return <Toggle width=\"150\" />\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Use for actions in forms, dialogs, and more with support for multiple sizes, states, and more. */\n\nconst Button = ({message}) => {\n  return <button>{message}</button>\n}\n\nButton.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n}\n\nButton.defaultProps = {\n  message: 'Submit'\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from 'sil-react/Button';\n\n/** Includes several predefined button styles,\n  * each serving its own semantic purpose,\n  * with a few extras thrown in for more control.\n**/\n\nexport default function ExampleButton() {\n  return <Button message=\"This is a button\"/>\n}\n","var map = {\n\t\"./Button/ExampleButton\": 11,\n\t\"./Button/ExampleButton.js\": 11,\n\t\"./Table/ExampleTable\": 9,\n\t\"./Table/ExampleTable.js\": 9,\n\t\"./Toggle/ExampleToggle\": 10,\n\t\"./Toggle/ExampleToggle.js\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <div className=\"navigation\">\n      <h2>Components</h2>\n      <ul>\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n     </ul>\n     <a href=\"https://github.com/dlouise64/comp-lib\">View on Github</a>\n    </div>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\n\nclass CodeExample extends React.Component {\n  componentDidMount() {\n    hljs.registerLanguage('javascript', javascript);\n    hljs.highlightBlock(this.element);\n  }\n\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <code>\n          {this.props.children}\n        </code>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n\n  // use static class proper so we can omit use of bind in constructor\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n\n    // must use CommonJS require to dynamically require\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n\n    return (\n      <div>\n        {description && <h4>{description}</h4>}\n\n        <div className=\"codeexample\">\n          <ExampleComponent />\n        </div>\n\n        <p>\n          <button style={{width: '150px'}} onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </button>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(props).map(key => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{props[key].description}</td>\n                <td>{props[key].type.name}</td>\n                <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n                <td>{props[key].required && \"true\"}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example  from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n}\n\nexport default ComponentPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route )[0] : componentData[0];\n\n    return (\n      <div>\n        <header>\n          <h1>Service Innovation Lab</h1>\n        </header>\n        <div className=\"parent\">\n        <div className=\"left\">\n          <Navigation components={componentData.map(component => component.name)} />\n        </div>\n        <div className=\"right\">\n          <ComponentPage component={component} />\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/highlight.js/styles/vs2015.css';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}