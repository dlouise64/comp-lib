{"version":3,"sources":["components/Label/index.js","components/ProgressBar/index.js","components/TextInput/index.js","docs/examples/Button/ExampleButton.js","docs/examples/EyeIcon/ExampleEyeIcon.js","components/EyeIcon/index.js","docs/examples/Label/ExampleLabel.js","docs/examples/Label/ExampleLabelRequired.js","docs/examples/PasswordInput/ExamplePasswordInput.js","components/PasswordInput/index.js","docs/examples/ProgressBar/Example100Percent.js","docs/examples/ProgressBar/Example10Percent.js","docs/examples/ProgressBar/Example70Percent.js","docs/examples/RegistrationForm/ExampleRegistrationForm.js","docs/examples/TextInput/ExampleError.js","docs/examples/TextInput/ExampleTextInput.js","docs/examples/TextInputBEM/ExampleTextInputBEM.js","index.js","docs/Docs.js","docs/Navigation.js","docs/ComponentPage.js","docs/Example.js","docs/CodeExample.js","docs/examples sync /^/.//.*$","components/Button/index.js","components/Button/Button.js","components/EyeIcon/EyeIcon.js","components/Label/Label.js","components/PasswordInput/PasswordInput.js","components/ProgressBar/ProgressBar.js","components/TextInput/TextInput.js","components/RegistrationForm/index.js","components/RegistrationForm/RegistrationForm.js","components/TextInputBEM/index.js","components/TextInputBEM/TextInputBEM.js","docs/Props.js","../config/componentData.js","serviceWorker.js"],"names":["_Label","__webpack_require__","_ProgressBar","_TextInput","_react","default","createElement","_Button","_interopRequireDefault","_EyeIcon","label","htmlFor","required","_PasswordInput","ExampleAllFeatures","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","password","React","Component","length","_this2","Object","assign","htmlId","name","onChange","event","setState","target","value","minLength","placeholder","showVisibilityToggle","quality","getQuality","percent","width","_RegistrationForm","ExampleRegistrationForm","onSubmit","user","console","log","error","_TextInputBEM","_reactDom","_Docs","serviceWorker","_interopRequireWildcard","ReactDOM","render","document","getElementById","unregister","_Navigation","_ComponentPage","_componentData","Docs","route","window","location","hash","substr","addEventListener","component","componentData","filter","className","components","map","_ref","key","href","concat","_Example","_Props","description","examples","example","code","componentName","_CodeExample","Example","toggleCode","preventDefault","prevState","showCode","_this$props$example","ExampleComponent","require","style","onClick","_highlight","_javascript","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","./Button/ExampleButton","./Button/ExampleButton.js","./EyeIcon/ExampleEyeIcon","./EyeIcon/ExampleEyeIcon.js","./Label/ExampleLabel","./Label/ExampleLabel.js","./Label/ExampleLabelRequired","./Label/ExampleLabelRequired.js","./PasswordInput/ExamplePasswordInput","./PasswordInput/ExamplePasswordInput.js","./ProgressBar/Example100Percent","./ProgressBar/Example100Percent.js","./ProgressBar/Example10Percent","./ProgressBar/Example10Percent.js","./ProgressBar/Example70Percent","./ProgressBar/Example70Percent.js","./RegistrationForm/ExampleRegistrationForm","./RegistrationForm/ExampleRegistrationForm.js","./TextInput/ExampleError","./TextInput/ExampleError.js","./TextInput/ExampleTextInput","./TextInput/ExampleTextInput.js","./TextInputBEM/ExampleTextInputBEM","./TextInputBEM/ExampleTextInputBEM.js","webpackContext","req","id","webpackContextResolve","e","Error","keys","resolve","module","exports","Button","message","type","defaultProps","height","xmlns","viewBox","transform","fill","d","cx","cy","r","Label","display","color","PasswordInput","toggleShowPassword","showPassword","_this$props","maxLength","_objectWithoutProperties","position","right","top","bottom","ProgressBar","getColor","getWidthAsPercentOfTotalWidth","parseInt","border","backgroundColor","_ref$type","_ref$required","marginBottom","RegistrationForm","validate","submitted","email","errors","minPasswordLength","getOwnPropertyNames","_this$state","_this$state$user","confirmationMessage","passwordQuality","defaultValue","computed","config","navigator","publicUrl","URL","process","origin","swUrl","isLocalhost","fetch","then","response","contentType","headers","get","status","indexOf","ready","registration","reload","registerValidSW","catch","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.87039b12.chunk.js","sourcesContent":["export {default} from './Label';\n","export {default} from './ProgressBar';\n","export {default} from './TextInput';\n","import React from 'react';\nimport Button from 'sil-react/Button';\n\n/** Button */\nexport default function ExampleButton() {\n  return <Button />;\n}\n","import React from 'react';\nimport EyeIcon from 'sil-react/EyeIcon';\n\n/** EyeIcon */\nexport default function ExampleEyeIcon() {\n  return <EyeIcon />;\n}\n","export {default} from './EyeIcon';\n","import React from 'react';\nimport Label from 'sil-react/Label';\n\n/** Label */\nexport default function ExampleLabel() {\n  return <Label\n    label=\"Label for label\"\n    htmlFor=\"optional_label\"\n  />;\n}\n","import React from 'react';\nimport Label from 'sil-react/Label';\n\n/** Label Required */\nexport default function ExampleLabelRequired() {\n  return <Label\n    label=\"Label for label\"\n    htmlFor=\"req_label\"\n    required\n  />;\n}\n","import React from 'react';\nimport PasswordInput from 'sil-react/PasswordInput';\n\n/** All features enabled */\n\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: ''\n    }\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password\"\n          name=\"password\"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter Password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;\n","export {default} from './PasswordInput';\n","import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example100Percent*/\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} />;\n}\n","import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example10Percent*/\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />;\n}\n","import React from 'react';\nimport ProgressBar from 'sil-react/ProgressBar';\n\n/** Example70Percent*/\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n","import React from 'react';\nimport RegistrationForm from 'sil-react/RegistrationForm';\n\n/** RegistrationForm */\nexport default class ExampleRegistrationForm extends React.Component {\n  onSubmit = user => {\n    console.log(user);\n  }\n\n  render() {\n    return <RegistrationForm onSubmit={this.onSubmit} />\n  }\n}\n","import React from 'react';\nimport TextInput from 'sil-react/TextInput';\n\n/** Required Text Box with error*/\nexport default function ExampleError() {\n  return (\n    <TextInput\n      htmlId=\"example-optional\"\n      label=\"email\"\n      name=\"email\"\n      required\n      error=\"email is required\"\n      onChange={() => {}}\n    />\n  );\n}\n","import React from 'react';\nimport TextInput from 'sil-react/TextInput';\n\n/** Optional Text Box */\nexport default function ExampleOptional() {\n  return (\n    <TextInput\n      htmlId=\"example-optional\"\n      label=\"email\"\n      name=\"email\"\n      onChange={() => {}}\n    />\n  );\n}\n","import React from 'react';\nimport TextInputBEM from 'sil-react/TextInputBEM';\n\n/** Optional Text Input BEM */\nexport default function ExampleTextInputBEM() {\n  return (\n    <TextInputBEM\n      htmlId=\"example-optional\"\n      label=\"email\"\n      name=\"email\"\n      onChange={() => {}}\n      required\n      error=\"Email is required\"\n    />\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/highlight.js/styles/vs2015.css';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route )[0] : componentData[0];\n\n    return (\n      <div>\n        <header>\n          <h1>Service Innovation Lab</h1>\n        </header>\n        <div className=\"parent\">\n        <div className=\"left\">\n          <Navigation components={componentData.map(component => component.name)} />\n        </div>\n        <div className=\"right\">\n          <ComponentPage component={component} />\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <div className=\"navigation\">\n      <h2>Components</h2>\n      <ul>\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n     </ul>\n     <a href=\"https://github.com/dlouise64/comp-lib\">View on Github</a>\n    </div>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example  from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n}\n\nexport default ComponentPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n\n  // use static class proper so we can omit use of bind in constructor\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n\n    // must use CommonJS require to dynamically require\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n\n    return (\n      <div>\n        {description && <h4>{description}</h4>}\n\n        <div className=\"codeExample\">\n          <ExampleComponent />\n          <p>\n          <button style={{width: '150px'}} onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </button>\n        </p>\n        {showCode && <CodeExample>{code}</CodeExample>}\n        </div>\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\n\nclass CodeExample extends React.Component {\n  componentDidMount() {\n    hljs.registerLanguage('javascript', javascript);\n    hljs.highlightBlock(this.element);\n  }\n\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <code>\n          {this.props.children}\n        </code>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;\n","var map = {\n\t\"./Button/ExampleButton\": 5,\n\t\"./Button/ExampleButton.js\": 5,\n\t\"./EyeIcon/ExampleEyeIcon\": 6,\n\t\"./EyeIcon/ExampleEyeIcon.js\": 6,\n\t\"./Label/ExampleLabel\": 8,\n\t\"./Label/ExampleLabel.js\": 8,\n\t\"./Label/ExampleLabelRequired\": 9,\n\t\"./Label/ExampleLabelRequired.js\": 9,\n\t\"./PasswordInput/ExamplePasswordInput\": 10,\n\t\"./PasswordInput/ExamplePasswordInput.js\": 10,\n\t\"./ProgressBar/Example100Percent\": 12,\n\t\"./ProgressBar/Example100Percent.js\": 12,\n\t\"./ProgressBar/Example10Percent\": 13,\n\t\"./ProgressBar/Example10Percent.js\": 13,\n\t\"./ProgressBar/Example70Percent\": 14,\n\t\"./ProgressBar/Example70Percent.js\": 14,\n\t\"./RegistrationForm/ExampleRegistrationForm\": 15,\n\t\"./RegistrationForm/ExampleRegistrationForm.js\": 15,\n\t\"./TextInput/ExampleError\": 16,\n\t\"./TextInput/ExampleError.js\": 16,\n\t\"./TextInput/ExampleTextInput\": 17,\n\t\"./TextInput/ExampleTextInput.js\": 17,\n\t\"./TextInputBEM/ExampleTextInputBEM\": 18,\n\t\"./TextInputBEM/ExampleTextInputBEM.js\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35;","export {default} from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nclass Button extends React.Component {\n  render() {\n    const {message} = this.props;\n    return (\n      <input className=\"btn info\" type=\"submit\" value={message} />\n    );\n  }\n}\n\nButton.propTypes = {\n  /** message to display on button */\n  message: PropTypes.string.isRequired\n};\n\nButton.defaultProps = {\n  /** Default message */\n  message: \"Submit\"\n}\n\nexport default Button;\n","import React from 'react';\n\n/** SVG Eye Icon */\n\nfunction EyeIcon() {\n  return (\n    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><g transform=\"matrix(.02146 0 0 .02146 1 1)\" fill=\"#4d4d4d\"><path d=\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\"/><circle cx=\"466.08\" cy=\"466.02\" r=\"134.5\"/></g></svg>\n  )\n}\n\nexport default EyeIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Label.css';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n  return (\n    <label style={{display: 'block'}} htmlFor={htmlFor}>\n      {label} { required && <span style={{color: 'red'}}> *</span> }\n    </label>\n  )\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterix after label if true */\n  required: PropTypes.bool\n};\n\nLabel.defaultProps = {\n}\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n// import './PasswordInput.css';\n\nclass PasswordInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  }\n  render() {\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props} = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}>\n        {\n          showVisibilityToggle &&\n        <span\n          onClick={this.toggleShowPassword}\n          style={{\n            position: 'absolute',\n            right: '-35px',\n            top: '27px',\n            bottom: 0\n          }}\n        >\n          <EyeIcon />\n        </span>\n        }\n        {\n          value.length > 0 && quality && <ProgressBar percent={quality} width={206} height={7} />\n        }\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name */\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder */\n  placeholder: PropTypes.string,\n\n  /** set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n}\n\nexport default PasswordInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ProgressBar.css';\n\nclass ProgressBar extends React.Component {\n\n  getColor = percent => {\n    if(this.props.percent === 100) return 'green';\n    return this.props.percent > 50 ? 'lightgreen' : 'red';\n  }\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  }\n  render() {\n    const {percent, width, height} = this.props;\n    return (\n      <div style={{border: 'solid 1px lightgray', width: width}} className=\"progressBar\">\n        <div style={{\n          width: this.getWidthAsPercentOfTotalWidth(),\n          height,\n          backgroundColor: this.getColor(percent)\n        }}>\n        </div>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n}\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport './TextInput.css';\n\n/** Text input */\nfunction TextInput({htmlId, name, label, type=\"text\", required=false, onChange, placeholder, value, error, children, ...props}) {\n  return (\n    <div style={{\n      marginBottom: 16,\n      position: 'relative',\n      display: 'inline-block'}}>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        className=\"textInput\"\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        style={error && { border: 'solid 1px red' }}\n        {...props} />\n        {children}\n        { error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\n    </div>\n  )\n}\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name */\n  name: PropTypes.string.isRequired,\n\n  /** Input Label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n","export {default} from './RegistrationForm';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from '../TextInput';\nimport PasswordInput from '../PasswordInput';\n\nimport './RegistrationForm.css';\n\nclass RegistrationForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      },\n      errors: {},\n      submitted: false\n    }\n  }\n\n  onChange = event => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  passwordQuality(password) {\n    if(!password) return null;\n    if(password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if(!email) errors.email = 'Email required';\n    if(password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters`;\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if(formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div className=\"registrationForm\">\n        <p>\n          <TextInput\n            htmlId=\"registration-form-email\"\n            name=\"email\"\n            onChange={this.onChange}\n            label=\"Email\"\n            value={email}\n            error={errors.email}\n            required\n          />\n        </p>\n        <p>\n          <PasswordInput\n            htmlId=\"registration-form-password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            quality={this.passwordQuality(password)}\n            showVisibilityToggle\n            maxLength={50}\n            error={errors.password}\n          />\n        </p>\n        <p>\n          <input className=\"btn info\" type=\"submit\" value=\"Register\" onClick={this.onSubmit} />\n        </p>\n      </div>\n    );\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n};\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: \"Thanks for registering\",\n  minPasswordLength: 8\n}\n\nexport default RegistrationForm;\n","import './textInput.css';\nexport {default} from './TextInputBEM';\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input */\nfunction TextInputBEM({htmlId, name, label, type=\"text\", required=false, onChange, placeholder, value, error, children, ...props}) {\n  return (\n    <div className=\"textInput\">\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={error && 'textInput__input--state-error'}\n        {...props} />\n        {children}\n        { error && <div className=\"textInput__error\" style={{color: 'red'}}>{error}</div>}\n    </div>\n  )\n}\n\nTextInputBEM.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name */\n  name: PropTypes.string.isRequired,\n\n  /** Input Label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to input */\n  children: PropTypes.node\n};\n\nexport default TextInputBEM;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(props).map(key => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{props[key].description}</td>\n                <td>{props[key].type.name}</td>\n                <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n                <td>{props[key].required && \"true\"}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","module.exports = [{\n  \"name\": \"Button\",\n  \"description\": \"\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"message to display on button\",\n      \"defaultValue\": {\n        \"value\": \"\\\"Submit\\\"\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport './Button.css';\\n\\nclass Button extends React.Component {\\n  render() {\\n    const {message} = this.props;\\n    return (\\n      <input className=\\\"btn info\\\" type=\\\"submit\\\" value={message} />\\n    );\\n  }\\n}\\n\\nButton.propTypes = {\\n  /** message to display on button */\\n  message: PropTypes.string.isRequired\\n};\\n\\nButton.defaultProps = {\\n  /** Default message */\\n  message: \\\"Submit\\\"\\n}\\n\\nexport default Button;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleButton\",\n    \"description\": \"Button\",\n    \"code\": \"import React from 'react';\\nimport Button from 'sil-react/Button';\\n\\n/** Button */\\nexport default function ExampleButton() {\\n  return <Button />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"EyeIcon\",\n  \"description\": \"SVG Eye Icon\",\n  \"code\": \"import React from 'react';\\n\\n/** SVG Eye Icon */\\n\\nfunction EyeIcon() {\\n  return (\\n    <svg width=\\\"24\\\" height=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 22 22\\\"><g transform=\\\"matrix(.02146 0 0 .02146 1 1)\\\" fill=\\\"#4d4d4d\\\"><path d=\\\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\\\"/><circle cx=\\\"466.08\\\" cy=\\\"466.02\\\" r=\\\"134.5\\\"/></g></svg>\\n  )\\n}\\n\\nexport default EyeIcon;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleEyeIcon\",\n    \"description\": \"EyeIcon\",\n    \"code\": \"import React from 'react';\\nimport EyeIcon from 'sil-react/EyeIcon';\\n\\n/** EyeIcon */\\nexport default function ExampleEyeIcon() {\\n  return <EyeIcon />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Label\",\n  \"description\": \"Label with required field display, htmlFor, and block styling\",\n  \"props\": {\n    \"htmlFor\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"HTML ID for associated input\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Label text\"\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Display asterix after label if true\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport './Label.css';\\n\\n/** Label with required field display, htmlFor, and block styling */\\nfunction Label({htmlFor, label, required}) {\\n  return (\\n    <label style={{display: 'block'}} htmlFor={htmlFor}>\\n      {label} { required && <span style={{color: 'red'}}> *</span> }\\n    </label>\\n  )\\n}\\n\\nLabel.propTypes = {\\n  /** HTML ID for associated input */\\n  htmlFor: PropTypes.string.isRequired,\\n\\n  /** Label text */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Display asterix after label if true */\\n  required: PropTypes.bool\\n};\\n\\nLabel.defaultProps = {\\n}\\n\\nexport default Label;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleLabel\",\n    \"description\": \"Label\",\n    \"code\": \"import React from 'react';\\nimport Label from 'sil-react/Label';\\n\\n/** Label */\\nexport default function ExampleLabel() {\\n  return <Label\\n    label=\\\"Label for label\\\"\\n    htmlFor=\\\"optional_label\\\"\\n  />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleLabelRequired\",\n    \"description\": \"Label Required\",\n    \"code\": \"import React from 'react';\\nimport Label from 'sil-react/Label';\\n\\n/** Label Required */\\nexport default function ExampleLabelRequired() {\\n  return <Label\\n    label=\\\"Label for label\\\"\\n    htmlFor=\\\"req_label\\\"\\n    required\\n  />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"PasswordInput\",\n  \"description\": \"\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Password value\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Input label\",\n      \"defaultValue\": {\n        \"value\": \"'Password'\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function called when password input value changes\"\n    },\n    \"maxLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Max password length accepted\",\n      \"defaultValue\": {\n        \"value\": \"50\",\n        \"computed\": false\n      }\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder\"\n    },\n    \"showVisibilityToggle\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"set to true to show the toggle for displaying the currently entered password\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"quality\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Display password quality visually via ProgressBar, accepts a number between 0 and 100\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Validation error to display\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport ProgressBar from '../ProgressBar';\\nimport EyeIcon from '../EyeIcon';\\nimport TextInput from '../TextInput';\\n\\n// import './PasswordInput.css';\\n\\nclass PasswordInput extends React.Component {\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showPassword: false\\n    }\\n  }\\n\\n  toggleShowPassword = event => {\\n    this.setState(prevState => {\\n      return { showPassword: !prevState.showPassword };\\n    });\\n    if (event) event.preventDefault();\\n  }\\n  render() {\\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props} = this.props;\\n    const { showPassword } = this.state;\\n\\n    return (\\n      <TextInput\\n        htmlId={htmlId}\\n        label={label}\\n        placeholder={placeholder}\\n        type={showPassword ? 'text' : 'password'}\\n        onChange={onChange}\\n        value={value}\\n        maxLength={maxLength}\\n        error={error}\\n        required\\n        {...props}>\\n        {\\n          showVisibilityToggle &&\\n        <span\\n          onClick={this.toggleShowPassword}\\n          style={{\\n            position: 'absolute',\\n            right: '-35px',\\n            top: '27px',\\n            bottom: 0\\n          }}\\n        >\\n          <EyeIcon />\\n        </span>\\n        }\\n        {\\n          value.length > 0 && quality && <ProgressBar percent={quality} width={206} height={7} />\\n        }\\n      </TextInput>\\n    );\\n  }\\n}\\n\\nPasswordInput.propTypes = {\\n  /** Unique HTML ID */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Password value */\\n  value: PropTypes.any,\\n\\n  /** Input label */\\n  label: PropTypes.string,\\n\\n  /** Function called when password input value changes */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Max password length accepted */\\n  maxLength: PropTypes.number,\\n\\n  /** Placeholder */\\n  placeholder: PropTypes.string,\\n\\n  /** set to true to show the toggle for displaying the currently entered password */\\n  showVisibilityToggle: PropTypes.bool,\\n\\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\\n  quality: PropTypes.number,\\n\\n  /** Validation error to display */\\n  error: PropTypes.string\\n};\\n\\nPasswordInput.defaultProps = {\\n  maxLength: 50,\\n  showVisibilityToggle: false,\\n  label: 'Password'\\n}\\n\\nexport default PasswordInput;\\n\",\n  \"examples\": [{\n    \"name\": \"ExamplePasswordInput\",\n    \"description\": \"All features enabled\",\n    \"code\": \"import React from 'react';\\nimport PasswordInput from 'sil-react/PasswordInput';\\n\\n/** All features enabled */\\n\\nclass ExampleAllFeatures extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      password: ''\\n    }\\n  }\\n\\n  getQuality() {\\n    const length = this.state.password.length;\\n    return length > 10 ? 100 : length * 10;\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <PasswordInput\\n          htmlId=\\\"password\\\"\\n          name=\\\"password\\\"\\n          onChange={ event => this.setState({ password: event.target.value })}\\n          value={this.state.password}\\n          minLength={8}\\n          placeholder=\\\"Enter Password\\\"\\n          showVisibilityToggle\\n          quality={this.getQuality()}\\n          {...this.props} />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default ExampleAllFeatures;\\n\"\n  }]\n}, {\n  \"name\": \"ProgressBar\",\n  \"description\": \"\",\n  \"props\": {\n    \"percent\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"Percent of progress completed\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"Bar width\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Bar height\",\n      \"defaultValue\": {\n        \"value\": \"5\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport './ProgressBar.css';\\n\\nclass ProgressBar extends React.Component {\\n\\n  getColor = percent => {\\n    if(this.props.percent === 100) return 'green';\\n    return this.props.percent > 50 ? 'lightgreen' : 'red';\\n  }\\n\\n  getWidthAsPercentOfTotalWidth = () => {\\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\\n  }\\n  render() {\\n    const {percent, width, height} = this.props;\\n    return (\\n      <div style={{border: 'solid 1px lightgray', width: width}} className=\\\"progressBar\\\">\\n        <div style={{\\n          width: this.getWidthAsPercentOfTotalWidth(),\\n          height,\\n          backgroundColor: this.getColor(percent)\\n        }}>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nProgressBar.propTypes = {\\n  /** Percent of progress completed */\\n  percent: PropTypes.number.isRequired,\\n\\n  /** Bar width */\\n  width: PropTypes.number.isRequired,\\n\\n  /** Bar height */\\n  height: PropTypes.number\\n};\\n\\nProgressBar.defaultProps = {\\n  height: 5\\n}\\n\\nexport default ProgressBar;\\n\",\n  \"examples\": [{\n    \"name\": \"Example100Percent\",\n    \"description\": \"Example100Percent\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'sil-react/ProgressBar';\\n\\n/** Example100Percent*/\\nexport default function Example100Percent() {\\n  return <ProgressBar percent={100} width={150} />;\\n}\\n\"\n  }, {\n    \"name\": \"Example10Percent\",\n    \"description\": \"Example10Percent\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'sil-react/ProgressBar';\\n\\n/** Example10Percent*/\\nexport default function Example10Percent() {\\n  return <ProgressBar percent={10} width={150} />;\\n}\\n\"\n  }, {\n    \"name\": \"Example70Percent\",\n    \"description\": \"Example70Percent\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'sil-react/ProgressBar';\\n\\n/** Example70Percent*/\\nexport default function Example70Percent() {\\n  return <ProgressBar percent={70} width={150} />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"RegistrationForm\",\n  \"description\": \"\",\n  \"props\": {\n    \"confirmationMessage\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"message displayed upon successful submission\",\n      \"defaultValue\": {\n        \"value\": \"\\\"Thanks for registering\\\"\",\n        \"computed\": false\n      }\n    },\n    \"onSubmit\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Called when form is submitted\"\n    },\n    \"minPasswordLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Minimum password length\",\n      \"defaultValue\": {\n        \"value\": \"8\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport TextInput from '../TextInput';\\nimport PasswordInput from '../PasswordInput';\\n\\nimport './RegistrationForm.css';\\n\\nclass RegistrationForm extends React.Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      user: {\\n        email: '',\\n        password: ''\\n      },\\n      errors: {},\\n      submitted: false\\n    }\\n  }\\n\\n  onChange = event => {\\n    const user = this.state.user;\\n    user[event.target.name] = event.target.value;\\n    this.setState({user});\\n  }\\n\\n  passwordQuality(password) {\\n    if(!password) return null;\\n    if(password.length >= this.props.minPasswordLength) return 100;\\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\\n    return percentOfMinLength;\\n  }\\n\\n  validate({email, password}) {\\n    const errors = {};\\n    const {minPasswordLength} = this.props;\\n\\n    if(!email) errors.email = 'Email required';\\n    if(password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters`;\\n    this.setState({errors});\\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\\n    return formIsValid;\\n  }\\n\\n  onSubmit = () => {\\n    const {user} = this.state;\\n    const formIsValid = this.validate(user);\\n    if(formIsValid) {\\n      this.props.onSubmit(user);\\n      this.setState({submitted: true});\\n    }\\n  }\\n  render() {\\n    const {errors, submitted} = this.state;\\n    const {email, password} = this.state.user;\\n    return (\\n      submitted ?\\n      <h2>{this.props.confirmationMessage}</h2> :\\n      <div className=\\\"registrationForm\\\">\\n        <p>\\n          <TextInput\\n            htmlId=\\\"registration-form-email\\\"\\n            name=\\\"email\\\"\\n            onChange={this.onChange}\\n            label=\\\"Email\\\"\\n            value={email}\\n            error={errors.email}\\n            required\\n          />\\n        </p>\\n        <p>\\n          <PasswordInput\\n            htmlId=\\\"registration-form-password\\\"\\n            name=\\\"password\\\"\\n            value={password}\\n            onChange={this.onChange}\\n            quality={this.passwordQuality(password)}\\n            showVisibilityToggle\\n            maxLength={50}\\n            error={errors.password}\\n          />\\n        </p>\\n        <p>\\n          <input className=\\\"btn info\\\" type=\\\"submit\\\" value=\\\"Register\\\" onClick={this.onSubmit} />\\n        </p>\\n      </div>\\n    );\\n  }\\n}\\n\\nRegistrationForm.propTypes = {\\n  /** message displayed upon successful submission */\\n  confirmationMessage: PropTypes.string,\\n\\n  /** Called when form is submitted */\\n  onSubmit: PropTypes.func.isRequired,\\n\\n  /** Minimum password length */\\n  minPasswordLength: PropTypes.number\\n};\\n\\nRegistrationForm.defaultProps = {\\n  confirmationMessage: \\\"Thanks for registering\\\",\\n  minPasswordLength: 8\\n}\\n\\nexport default RegistrationForm;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleRegistrationForm\",\n    \"description\": \"RegistrationForm\",\n    \"code\": \"import React from 'react';\\nimport RegistrationForm from 'sil-react/RegistrationForm';\\n\\n/** RegistrationForm */\\nexport default class ExampleRegistrationForm extends React.Component {\\n  onSubmit = user => {\\n    console.log(user);\\n  }\\n\\n  render() {\\n    return <RegistrationForm onSubmit={this.onSubmit} />\\n  }\\n}\\n\"\n  }]\n}, {\n  \"name\": \"TextInput\",\n  \"description\": \"Text input\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input Label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'number'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'password'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to input\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\nimport './TextInput.css';\\n\\n/** Text input */\\nfunction TextInput({htmlId, name, label, type=\\\"text\\\", required=false, onChange, placeholder, value, error, children, ...props}) {\\n  return (\\n    <div style={{\\n      marginBottom: 16,\\n      position: 'relative',\\n      display: 'inline-block'}}>\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <input\\n        className=\\\"textInput\\\"\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        style={error && { border: 'solid 1px red' }}\\n        {...props} />\\n        {children}\\n        { error && <div className=\\\"error\\\" style={{color: 'red'}}>{error}</div>}\\n    </div>\\n  )\\n}\\n\\nTextInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input Label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf(['text', 'number', 'password']),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInput;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleError\",\n    \"description\": \"Required Text Box with error\",\n    \"code\": \"import React from 'react';\\nimport TextInput from 'sil-react/TextInput';\\n\\n/** Required Text Box with error*/\\nexport default function ExampleError() {\\n  return (\\n    <TextInput\\n      htmlId=\\\"example-optional\\\"\\n      label=\\\"email\\\"\\n      name=\\\"email\\\"\\n      required\\n      error=\\\"email is required\\\"\\n      onChange={() => {}}\\n    />\\n  );\\n}\\n\"\n  }, {\n    \"name\": \"ExampleTextInput\",\n    \"description\": \"Optional Text Box\",\n    \"code\": \"import React from 'react';\\nimport TextInput from 'sil-react/TextInput';\\n\\n/** Optional Text Box */\\nexport default function ExampleOptional() {\\n  return (\\n    <TextInput\\n      htmlId=\\\"example-optional\\\"\\n      label=\\\"email\\\"\\n      name=\\\"email\\\"\\n      onChange={() => {}}\\n    />\\n  );\\n}\\n\"\n  }]\n}, {\n  \"name\": \"TextInputBEM\",\n  \"description\": \"Text input\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input Label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'number'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'password'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to input\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\n\\n/** Text input */\\nfunction TextInputBEM({htmlId, name, label, type=\\\"text\\\", required=false, onChange, placeholder, value, error, children, ...props}) {\\n  return (\\n    <div className=\\\"textInput\\\">\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        className={error && 'textInput__input--state-error'}\\n        {...props} />\\n        {children}\\n        { error && <div className=\\\"textInput__error\\\" style={{color: 'red'}}>{error}</div>}\\n    </div>\\n  )\\n}\\n\\nTextInputBEM.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input Label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf(['text', 'number', 'password']),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInputBEM;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleTextInputBEM\",\n    \"description\": \"Optional Text Input BEM\",\n    \"code\": \"import React from 'react';\\nimport TextInputBEM from 'sil-react/TextInputBEM';\\n\\n/** Optional Text Input BEM */\\nexport default function ExampleTextInputBEM() {\\n  return (\\n    <TextInputBEM\\n      htmlId=\\\"example-optional\\\"\\n      label=\\\"email\\\"\\n      name=\\\"email\\\"\\n      onChange={() => {}}\\n      required\\n    />\\n  );\\n}\\n\"\n  }]\n}];","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}